{"version":3,"sources":["module.coffee","controller.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module('taiga.plugins.notes', ['ngRoute'])\r\n.config ['$routeProvider', ($routeProvider) ->\r\n    $routeProvider\r\n        .when('/notes',\r\n            templateUrl: 'partials/notes.html'\r\n            controller: 'NotesListController'\r\n        )\r\n        .when('/notes/create',\r\n            templateUrl: 'partials/note-edit.html'\r\n            controller: 'NoteEditPageController'\r\n        )\r\n        .when('/notes/:id/edit',\r\n            templateUrl: 'partials/note-edit.html'\r\n            controller: 'NoteEditPageController'\r\n        )\r\n        .otherwise(\r\n            redirectTo: '/notes'\r\n        )\r\n]\r\n","angular.module('taiga.plugins.notes')\r\n.controller('NotesListController', [\r\n  '$scope', '$location', '$http',\r\n  ($scope, $location, $http) ->\r\n\r\n    API_BASE = 'http://127.0.0.1:8000/api'\r\n    $scope.notes = []\r\n    $scope.searchQuery = \"\"\r\n\r\n    $scope.loadNotes = ->\r\n      $http.get(\"#{API_BASE}/notes/\").then (res) ->\r\n        $scope.notes = res.data\r\n\r\n    $scope.goToCreate = -> $location.path('/notes/create')\r\n\r\n    $scope.editNote = (note) -> $location.path('/notes/' + note.id + '/edit')\r\n\r\n    $scope.downloadNote = (note) ->\r\n      blob = new Blob([note.current_version_content or ''], { type: 'text/html' })\r\n      a = document.createElement(\"a\")\r\n      a.href = URL.createObjectURL(blob)\r\n      a.download = \"#{note.name or 'note'}.html\"\r\n      a.click()\r\n\r\n    $scope.deleteNote = (note) ->\r\n      if confirm(\"Bạn có chắc muốn xóa ghi chú '#{note.name}'?\")\r\n        $http.delete(\"#{API_BASE}/notes/#{note.id}/\").then -> $scope.loadNotes()\r\n\r\n    # Hàm lấy ngày cập nhật mới nhất (của current_version)\r\n    $scope.getUpdatedAt = (note) ->\r\n      if note.current_version_id and note.versions\r\n        ver = note.versions.find (v) -> v.id == note.current_version_id\r\n        return ver?.created_at or note.created_at\r\n      else\r\n        return note.created_at\r\n\r\n    $scope.loadNotes()\r\n])\r\n\r\nangular.module('taiga.plugins.notes')\r\n.controller('NoteEditPageController', [\r\n  '$scope', '$location', '$timeout', '$routeParams', '$http',\r\n  ($scope, $location, $timeout, $routeParams, $http) ->\r\n\r\n    API_BASE = 'http://127.0.0.1:8000/api'\r\n    noteId = $routeParams.id ? null\r\n    $scope.note = { name: \"\", content: \"\", creator: 1 }\r\n    $scope.versions = []\r\n    $scope.selectedVersion = null\r\n\r\n    loadNoteAndVersions = ->\r\n      if noteId?\r\n        $http.get(\"#{API_BASE}/notes/#{noteId}/\").then (res) ->\r\n          $scope.note = res.data\r\n          $scope.versions = $scope.note.versions or []\r\n          # Mặc định, chọn version hiện tại\r\n          $scope.selectedVersion = $scope.versions.find (v) -> v.id == $scope.note.current_version_id\r\n          $timeout(editorInit, 0)\r\n        , (err) ->\r\n          alert(\"Note không tồn tại hoặc lỗi server.\")\r\n          $location.path('/notes')\r\n      else\r\n        $scope.versions = []\r\n        $scope.note = { name: \"\", content: \"\", creator: 1 }\r\n        $scope.selectedVersion = null\r\n        $timeout(editorInit, 0)\r\n\r\n    # Hàm chọn version để preview\r\n    $scope.selectVersion = (ver) ->\r\n      $scope.selectedVersion = ver\r\n      if window.editorInstance?\r\n        window.editorInstance.setData(ver.content or \"\")\r\n\r\n    # Hàm phục hồi về version đang chọn\r\n    $scope.restoreSelectedVersion = ->\r\n      ver = $scope.selectedVersion\r\n      if not ver or ver.id == $scope.note.current_version_id\r\n        alert(\"Vui lòng chọn version khác version hiện tại để phục hồi!\")\r\n        return\r\n      $http.post(\"#{API_BASE}/notes/#{noteId}/restore_version/\", { version_id: ver.id }).then (res) ->\r\n        $scope.note = res.data\r\n        $scope.versions = $scope.note.versions or []\r\n        # Chọn lại version hiện tại mới nhất sau phục hồi\r\n        $scope.selectedVersion = $scope.versions.find (v) -> v.id == $scope.note.current_version_id\r\n        if window.editorInstance?\r\n          window.editorInstance.setData($scope.note.current_version_content or \"\")\r\n\r\n    # Hàm khởi tạo CKEditor\r\n    editorInit = ->\r\n      if window.editorInstance?\r\n        window.editorInstance.destroy()\r\n      ClassicEditor\r\n        .create(document.querySelector('#noteContent'))\r\n        .then (editor) ->\r\n          window.editorInstance = editor\r\n          editor.model.document.on('change:data', ->\r\n            if not $scope.$$phase\r\n              $scope.$apply -> $scope.note.content = editor.getData()\r\n            else\r\n              $scope.note.content = editor.getData()\r\n          )\r\n          # Khi load lần đầu, editor hiển thị đúng content của version hiện tại\r\n          editor.setData($scope.note.current_version_content or \"\")\r\n        .catch (err) -> console.error(\"CKEditor init failed:\", err)\r\n\r\n    # Lưu note (tạo/sửa)\r\n    $scope.save = ->\r\n      if window.editorInstance?\r\n        $scope.note.content = window.editorInstance.getData()\r\n      dataToSend =\r\n        name: $scope.note.name\r\n        content: $scope.note.content\r\n        creator: $scope.note.creator\r\n      if noteId?\r\n        $http.put(\"#{API_BASE}/notes/#{noteId}/\", dataToSend).then -> $location.path('/notes')\r\n      else\r\n        $http.post(\"#{API_BASE}/notes/\", dataToSend).then (res) -> $location.path('/notes')\r\n\r\n    $scope.back = -> $location.path('/notes')\r\n\r\n    $scope.$on('$destroy', ->\r\n      if window.editorInstance?\r\n        window.editorInstance.destroy()\r\n        window.editorInstance = null\r\n    )\r\n\r\n    loadNoteAndVersions()\r\n])\r\n"]}